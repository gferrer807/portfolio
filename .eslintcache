[{"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\index.js":"1","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Taskbar.js":"2","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\App.js":"3","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\services\\dataService.js":"4","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\contexts\\dataContext.js":"5","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Shortcuts.js":"6","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Desktop.js":"7","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\Resume.js":"8","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\Clippy.js":"9","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\programsData\\resumeData.js":"10","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\Skills.js":"11","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\programsData\\skillsData.js":"12"},{"size":165,"mtime":1606867620010,"results":"13","hashOfConfig":"14"},{"size":3078,"mtime":1606921501149,"results":"15","hashOfConfig":"14"},{"size":1145,"mtime":1606921566828,"results":"16","hashOfConfig":"14"},{"size":10356,"mtime":1607381776701,"results":"17","hashOfConfig":"14"},{"size":72,"mtime":1606868692335,"results":"18","hashOfConfig":"14"},{"size":1648,"mtime":1607379522755,"results":"19","hashOfConfig":"14"},{"size":1271,"mtime":1607384821279,"results":"20","hashOfConfig":"14"},{"size":1346,"mtime":1607384901786,"results":"21","hashOfConfig":"14"},{"size":519,"mtime":1606921548247,"results":"22","hashOfConfig":"14"},{"size":1606,"mtime":1606922027526,"results":"23","hashOfConfig":"14"},{"size":1357,"mtime":1607384873494,"results":"24","hashOfConfig":"14"},{"size":979,"mtime":1607384222315,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1avg15o",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\index.js",[],["53","54"],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Taskbar.js",["55","56","57"],"import React, { useContext, useEffect } from 'react'\r\nimport DataContext from '../contexts/dataContext'\r\nimport { TaskBar, List } from '@react95/core'\r\nimport styled from 'styled-components'\r\n\r\nconst Link = styled.a`\r\n    text-decoration: none;\r\n    color: inherit;\r\n`\r\n\r\n\r\nfunction Taskbar() {\r\n    const { projectRepo, react95Repo } = useContext(DataContext).getProjectInfo();\r\n    const { socialLinks } = useContext(DataContext).getSocialLinks();\r\n    const { agents } = useContext(DataContext).getAgents();\r\n    const [newAgent, setNewAgent] = React.useState('Clippy');\r\n    useContext(DataContext).changeAgent(newAgent);\r\n\r\n    const writeNewAgent = (newAgent) => {\r\n        setNewAgent(newAgent)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNewAgent(newAgent);\r\n    }, []);\r\n\r\n    console.log('newAgent - ', useContext(DataContext).getCurrentAgent())\r\n\r\n    return (\r\n        <TaskBar\r\n            list={\r\n                <List> \r\n                    {/* <List.Item icon=\"awfext32_6049\">\r\n                        Change Helper\r\n                        <List>\r\n                            {agents.map((item) => {\r\n                                return (\r\n                                    <List.Item \r\n                                        key={item}\r\n                                        onClick={() => {writeNewAgent(item)}}\r\n                                    >\r\n                                        {item}\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </List>\r\n                    </List.Item>\r\n                    <List.Divider/> */}\r\n                    <List.Item icon=\"awfext32_6049\">\r\n                        Contact Me\r\n                        <List>\r\n                            {socialLinks.map(({icon, name, url}) => {\r\n                                return (\r\n                                    <List.Item \r\n                                        as='a'\r\n                                        href={url}\r\n                                        icon={icon}\r\n                                        key={name}\r\n                                        rel='noopener noreferrer'\r\n                                        target='_blank'\r\n                                    >\r\n                                        {name}\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </List>\r\n                    </List.Item>\r\n                    <List.Divider />\r\n                    <List.Item className=\"pointer\" icon=\"brush\">\r\n                        <Link href={react95Repo} target=\"_blank\">Built with React95</Link>\r\n                    </List.Item>\r\n                    <List.Divider />\r\n                    <List.Item className=\"pointer\" icon=\"folder_file\">\r\n                        <Link href={projectRepo} target=\"_blank\">Repo</Link>\r\n                    </List.Item>\r\n                </List>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default Taskbar\r\n","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\App.js",[],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\services\\dataService.js",[],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\contexts\\dataContext.js",[],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Shortcuts.js",["58"],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Desktop.js",["59","60","61","62","63"],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\Resume.js",["64","65","66"],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\Clippy.js",["67"],"import React, { useContext, useEffect } from 'react';\r\nimport { useClippy, ClippyProvider } from '@react95/clippy';\r\nimport DataContext from '../../contexts/dataContext'\r\n\r\nconst MyComponent = () => {\r\n    return (<></>);\r\n};\r\n\r\nconst Clippy = () => {\r\n\r\n  const {currentAgent} = useContext(DataContext).getCurrentAgent();\r\n\r\n  useEffect(() => {\r\n    \r\n  }, [currentAgent])\r\n  \r\n  return (\r\n    <ClippyProvider agentName={currentAgent}>\r\n        <MyComponent />\r\n    </ClippyProvider>\r\n  )\r\n};\r\n\r\nexport default Clippy;","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\programsData\\resumeData.js",[],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\Skills.js",["68","69","70","71","72"],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\programsData\\skillsData.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":15,"column":13,"nodeType":"79","messageId":"80","endLine":15,"endColumn":19},{"ruleId":"77","severity":1,"message":"81","line":19,"column":11,"nodeType":"79","messageId":"80","endLine":19,"endColumn":24},{"ruleId":"82","severity":1,"message":"83","line":25,"column":8,"nodeType":"84","endLine":25,"endColumn":10,"suggestions":"85"},{"ruleId":"77","severity":1,"message":"86","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"77","severity":1,"message":"87","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"88","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":37},{"ruleId":"77","severity":1,"message":"89","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":19},{"ruleId":"77","severity":1,"message":"90","line":8,"column":7,"nodeType":"79","messageId":"80","endLine":8,"endColumn":15},{"ruleId":"82","severity":1,"message":"91","line":31,"column":12,"nodeType":"84","endLine":31,"endColumn":14,"suggestions":"92"},{"ruleId":"77","severity":1,"message":"86","line":1,"column":29,"nodeType":"79","messageId":"80","endLine":1,"endColumn":38},{"ruleId":"77","severity":1,"message":"93","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":18},{"ruleId":"77","severity":1,"message":"94","line":9,"column":22,"nodeType":"79","messageId":"80","endLine":9,"endColumn":33},{"ruleId":"77","severity":1,"message":"95","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":19},{"ruleId":"77","severity":1,"message":"86","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"77","severity":1,"message":"96","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":14},{"ruleId":"77","severity":1,"message":"97","line":3,"column":16,"nodeType":"79","messageId":"80","endLine":3,"endColumn":24},{"ruleId":"77","severity":1,"message":"98","line":3,"column":26,"nodeType":"79","messageId":"80","endLine":3,"endColumn":33},{"ruleId":"77","severity":1,"message":"94","line":9,"column":22,"nodeType":"79","messageId":"80","endLine":9,"endColumn":33},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'agents' is assigned a value but never used.","Identifier","unusedVar","'writeNewAgent' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newAgent'. Either include it or remove the dependency array. You can also do a functional update 'setNewAgent(n => ...)' if you only need 'newAgent' in the 'setNewAgent' call.","ArrayExpression",["101"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'DataContext' is defined but never used.","'playlist' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'showResume'. Either include it or remove the dependency array. You can also do a functional update 'setShowResume(s => ...)' if you only need 'showResume' in the 'setShowResume' call.",["102"],"'isMobile' is defined but never used.","'setIsMobile' is assigned a value but never used.","'useClippy' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Divider' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [newAgent]",{"range":"107","text":"108"},"Update the dependencies array to be: [showResume]",{"range":"109","text":"110"},[774,776],"[newAgent]",[853,855],"[showResume]"]