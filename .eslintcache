[{"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\index.js":"1","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Taskbar.js":"2","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\App.js":"3","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\services\\dataService.js":"4","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\contexts\\dataContext.js":"5","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Shortcuts.js":"6","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Desktop.js":"7","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\Resume.js":"8","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\Clippy.js":"9","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\programsData\\resumeData.js":"10"},{"size":165,"mtime":1606867620010,"results":"11","hashOfConfig":"12"},{"size":3078,"mtime":1606921501149,"results":"13","hashOfConfig":"12"},{"size":1145,"mtime":1606921566828,"results":"14","hashOfConfig":"12"},{"size":10354,"mtime":1606878860998,"results":"15","hashOfConfig":"12"},{"size":72,"mtime":1606868692335,"results":"16","hashOfConfig":"12"},{"size":1805,"mtime":1606923311564,"results":"17","hashOfConfig":"12"},{"size":963,"mtime":1606921588835,"results":"18","hashOfConfig":"12"},{"size":1400,"mtime":1607008058234,"results":"19","hashOfConfig":"12"},{"size":519,"mtime":1606921548247,"results":"20","hashOfConfig":"12"},{"size":1606,"mtime":1606922027526,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1avg15o",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\index.js",[],["48","49"],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Taskbar.js",["50","51","52"],"import React, { useContext, useEffect } from 'react'\r\nimport DataContext from '../contexts/dataContext'\r\nimport { TaskBar, List } from '@react95/core'\r\nimport styled from 'styled-components'\r\n\r\nconst Link = styled.a`\r\n    text-decoration: none;\r\n    color: inherit;\r\n`\r\n\r\n\r\nfunction Taskbar() {\r\n    const { projectRepo, react95Repo } = useContext(DataContext).getProjectInfo();\r\n    const { socialLinks } = useContext(DataContext).getSocialLinks();\r\n    const { agents } = useContext(DataContext).getAgents();\r\n    const [newAgent, setNewAgent] = React.useState('Clippy');\r\n    useContext(DataContext).changeAgent(newAgent);\r\n\r\n    const writeNewAgent = (newAgent) => {\r\n        setNewAgent(newAgent)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNewAgent(newAgent);\r\n    }, []);\r\n\r\n    console.log('newAgent - ', useContext(DataContext).getCurrentAgent())\r\n\r\n    return (\r\n        <TaskBar\r\n            list={\r\n                <List> \r\n                    {/* <List.Item icon=\"awfext32_6049\">\r\n                        Change Helper\r\n                        <List>\r\n                            {agents.map((item) => {\r\n                                return (\r\n                                    <List.Item \r\n                                        key={item}\r\n                                        onClick={() => {writeNewAgent(item)}}\r\n                                    >\r\n                                        {item}\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </List>\r\n                    </List.Item>\r\n                    <List.Divider/> */}\r\n                    <List.Item icon=\"awfext32_6049\">\r\n                        Contact Me\r\n                        <List>\r\n                            {socialLinks.map(({icon, name, url}) => {\r\n                                return (\r\n                                    <List.Item \r\n                                        as='a'\r\n                                        href={url}\r\n                                        icon={icon}\r\n                                        key={name}\r\n                                        rel='noopener noreferrer'\r\n                                        target='_blank'\r\n                                    >\r\n                                        {name}\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </List>\r\n                    </List.Item>\r\n                    <List.Divider />\r\n                    <List.Item className=\"pointer\" icon=\"brush\">\r\n                        <Link href={react95Repo} target=\"_blank\">Built with React95</Link>\r\n                    </List.Item>\r\n                    <List.Divider />\r\n                    <List.Item className=\"pointer\" icon=\"folder_file\">\r\n                        <Link href={projectRepo} target=\"_blank\">Repo</Link>\r\n                    </List.Item>\r\n                </List>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default Taskbar\r\n","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\App.js",[],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\services\\dataService.js",[],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\contexts\\dataContext.js",[],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Shortcuts.js",["53"],"import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Icon } from '@react95/core'\r\n\r\nconst StyledShorcut = styled.div`\r\n    margin-left: 20px;\r\n    margin-top: 20px;\r\n    align-items: center;\r\n    color: white;\r\n`;\r\n\r\nfunction Shortcuts({ openExplorer, openResume }) {\r\n\r\n    const openYoutube = () => {\r\n        const url = 'https://www.youtube.com/watch?v=OE2NPmqZ9nM';\r\n        window.open(url, \"_blank\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <StyledShorcut>\r\n                <Icon\r\n                    className=\"pointer\"\r\n                    name=\"notepad\"\r\n                    onClick={() => {openResume()}}\r\n                />\r\n                <div>resume.txt</div>\r\n            </StyledShorcut>\r\n            <StyledShorcut>\r\n                <Icon\r\n                    className=\"pointer\"\r\n                    name=\"media_cd\"\r\n                />\r\n                <div>Media.exe</div>\r\n            </StyledShorcut>\r\n            <StyledShorcut>\r\n                <Icon\r\n                    className=\"pointer\"\r\n                    name=\"pbrush_1\"\r\n                />\r\n                <div>Skills.exe</div>\r\n            </StyledShorcut>\r\n            <StyledShorcut>\r\n                <Icon\r\n                    className=\"pointer\"\r\n                    name=\"bulb\"\r\n                />\r\n                <div>Helper Agent.exe</div>\r\n            </StyledShorcut>\r\n            <StyledShorcut>\r\n                <Icon\r\n                    className=\"pointer\"\r\n                    name=\"actmovie_303\"\r\n                    onClick={() => openYoutube()}\r\n                />\r\n                <div>Learn the secrets...</div> \r\n                {/* will eventually be dolphin.ico */}\r\n            </StyledShorcut>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shortcuts","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Desktop.js",["54","55","56","57","58"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport DataContext from '../contexts/dataContext'\r\nimport Shortcuts from './Shortcuts';\r\nimport Resume from './programs/Resume'\r\nimport Clippy from './programs/Clippy'\r\n\r\nconst playlist = [\r\n    {\r\n      url: 'https://archive.org/download/CC1301_windows_95/CC1301_windows_95_512kb.mp4',\r\n      title: 'Computer Chronicles - Windows 95'\r\n    }\r\n  ];\r\n\r\nconst Desktop = () => {\r\n\r\n    const [showResume, setShowResume] = React.useState(false);\r\n\r\n    const openResume = () => {\r\n        setShowResume(!showResume);\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            setShowResume(showResume);\r\n        }, []);\r\n        \r\n    return (\r\n        <React.Fragment>\r\n            <Shortcuts openResume={openResume}/>\r\n            {showResume ? <Resume openResume={openResume} showResume={showResume}></Resume> : <></>}\r\n            <Clippy/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Desktop","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\Resume.js",["59","60"],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\Clippy.js",["61"],"import React, { useContext, useEffect } from 'react';\r\nimport { useClippy, ClippyProvider } from '@react95/clippy';\r\nimport DataContext from '../../contexts/dataContext'\r\n\r\nconst MyComponent = () => {\r\n    return (<></>);\r\n};\r\n\r\nconst Clippy = () => {\r\n\r\n  const {currentAgent} = useContext(DataContext).getCurrentAgent();\r\n\r\n  useEffect(() => {\r\n    \r\n  }, [currentAgent])\r\n  \r\n  return (\r\n    <ClippyProvider agentName={currentAgent}>\r\n        <MyComponent />\r\n    </ClippyProvider>\r\n  )\r\n};\r\n\r\nexport default Clippy;","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\programsData\\resumeData.js",[],["62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":15,"column":13,"nodeType":"70","messageId":"71","endLine":15,"endColumn":19},{"ruleId":"68","severity":1,"message":"72","line":19,"column":11,"nodeType":"70","messageId":"71","endLine":19,"endColumn":24},{"ruleId":"73","severity":1,"message":"74","line":25,"column":8,"nodeType":"75","endLine":25,"endColumn":10,"suggestions":"76"},{"ruleId":"68","severity":1,"message":"77","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":26},{"ruleId":"68","severity":1,"message":"78","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"79","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":37},{"ruleId":"68","severity":1,"message":"80","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":19},{"ruleId":"68","severity":1,"message":"81","line":7,"column":7,"nodeType":"70","messageId":"71","endLine":7,"endColumn":15},{"ruleId":"73","severity":1,"message":"82","line":25,"column":12,"nodeType":"75","endLine":25,"endColumn":14,"suggestions":"83"},{"ruleId":"68","severity":1,"message":"84","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":18},{"ruleId":"68","severity":1,"message":"85","line":9,"column":22,"nodeType":"70","messageId":"71","endLine":9,"endColumn":33},{"ruleId":"68","severity":1,"message":"86","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":19},{"ruleId":"64","replacedBy":"87"},{"ruleId":"66","replacedBy":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'agents' is assigned a value but never used.","Identifier","unusedVar","'writeNewAgent' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newAgent'. Either include it or remove the dependency array. You can also do a functional update 'setNewAgent(n => ...)' if you only need 'newAgent' in the 'setNewAgent' call.","ArrayExpression",["91"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'DataContext' is defined but never used.","'playlist' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'showResume'. Either include it or remove the dependency array. You can also do a functional update 'setShowResume(s => ...)' if you only need 'showResume' in the 'setShowResume' call.",["92"],"'isMobile' is defined but never used.","'setIsMobile' is assigned a value but never used.","'useClippy' is defined but never used.",["89"],["90"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [newAgent]",{"range":"97","text":"98"},"Update the dependencies array to be: [showResume]",{"range":"99","text":"100"},[774,776],"[newAgent]",[671,673],"[showResume]"]